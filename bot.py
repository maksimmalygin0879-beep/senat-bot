import os
import logging
import asyncio
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

# üì¶ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ .env
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")

# üß© –ï—Å–ª–∏ –≤–¥—Ä—É–≥ .env –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –≤—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
if not BOT_TOKEN:
    raise ValueError("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω! –£–±–µ–¥–∏—Å—å, —á—Ç–æ –≤ .env –æ–Ω –ø—Ä–æ–ø–∏—Å–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")

# ü™™ –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
WELCOME_PHOTO_ID = "AgACAgIAAxkBAAMjaKcaj16sGKNtMFqRq3GST0pQttoAAgX1MRuSdDlJFZlWDjJU6jQBAAMCAAN5AAM2BA"

# ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# ü§ñ –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer_photo(
        photo=WELCOME_PHOTO_ID,
        caption=(
            "<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SENAT!</b>\n\n"
            "–ó–¥–µ—Å—å —Ü–µ–Ω—è—Ç <b>—Å—Ç–∞—Ç—É—Å</b>, <b>–∫–æ–º—Ñ–æ—Ä—Ç</b> –∏ <b>–∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å</b>.\n"
            "–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º <b>–ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å</b> –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ª—É—á—à–µ–µ.\n"
            "–í–∞—à <b>–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä</b> –≥–æ—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ."
        ),
        parse_mode="HTML",
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="üí¨ –ö –º–µ–Ω–µ–¥–∂–µ—Ä—É", url="https://t.me/senat_mananger")],
                [InlineKeyboardButton(text="üîí –ó–∞–∫—Ä—ã—Ç—ã–π –∫–ª—É–±", url="https://t.me/+MpPrz-ngoBUxYWJi")],
                [InlineKeyboardButton(text="‚ÑπÔ∏è –û –Ω–∞—Å", callback_data="about_us")]
            ]
        )
    )

# –ö–Ω–æ–ø–∫–∞ "–û –Ω–∞—Å"
@dp.callback_query(F.data == "about_us")
async def about_us(callback: types.CallbackQuery):
    text = (
        "<b>–û –Ω–∞—à–µ–º –∫–ª—É–±–µ</b>\n\n"
        "SENAT ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ —Ü–µ–Ω—è—Ç —Å—Ç–∏–ª—å, –∫–æ–º—Ñ–æ—Ä—Ç –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å.\n\n"
        "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≥–æ—Å—Ç—è–º –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –¥–æ–≤–µ—Ä–∏—è –∏ —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞, "
        "–≥–¥–µ –∫–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ–¥—É–º–∞–Ω –¥–æ –º–µ–ª–æ—á–µ–π.\n\n"
        "–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å, –∫–∞—á–µ—Å—Ç–≤–æ –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º ‚Äî –Ω–∞—à–∏ –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã."
    )
    await callback.message.answer(text, parse_mode="HTML")
    await callback.answer()

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
async def main():
    logging.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

